title: Команды Linux
---

body:

Команды для управления программами строятся по такой схеме:

"название_программы -ключ значение" 

<h2>Файловые команды</h2>

* cd ../..	перейти в директорию двумя уровнями выше

* cd	перейти в домашнюю директорию

* cd ~user	перейти в домашнюю директорию пользователя user

* cd -	перейти в директорию, в которой находились до перехода в текущую директорию

* pwd	показать текущюю директорию

* mkdir dir	создать каталог dir

* mkdir dir1	создать директорию с именем 'dir1'

* mkdir dir1 dir2	создать две директории одновременно

* mkdir -p /tmp/dir1/dir2	создать дерево директорий

* rm file	удалить file

* rm -r dir	удалить каталог dir

* rm -f file	удалить форсированно file

* rm -rf dir	удалить форсированно каталог dir

* rm -f file1	удалить файл с именем 'file1'

* rmdir dir1	удалить директорию с именем 'dir1'

* rm -rf dir1	удалить директорию с именем 'dir1' и рекурсивно всё её содержимое

* rm -rf dir1 dir2	удалить две директории и рекурсивно их содержимое

* cp file1 file2	скопировать file1 в file2

* cp -r dir1 dir2	скопировать dir1 в dir2; создаст каталог dir2, если он не существует

* cp dir/	копировать все файлы директории dir в текущую директорию

* cp -a /tmp/dir1	копировать директорию dir1 со всем содержимым в текущую директорию

* cp -a dir1 dir2	копировать директорию dir1 в директорию dir2

* mv dir1 new_dir	переименовать или переместить файл или директорию

* mv file1 file2	переименовать или переместить file1 в file2. если file2 существующий каталог - переместить file1 
в каталог file2

* ln -s file1 lnk1	создать символическую ссылку на файл или директорию

* ln file1 lnk1	создать «жёсткую» (физическую) ссылку на файл или директорию

* touch file	создать file

* touch -t 0712250000 fileditest	модифицировать дату и время создания файла, при его отсутствии, создать файл с 
указанными датой и временем (YYMMDDhhmm)

* cat > file	направить стандартный ввод в file

* more file	вывести содержимое file

* head file	вывести первые 10 строк file

* tail file	вывести последние 10 строк file

* tail -f file	вывести содержимое file по мере роста, начинает с последних 10 строк

<h2>Использование пакетного менеджера Apt</h2>

apt (advanced packaging tool) — программа для установки, обновления и удаления программных пакетов в операционных системах Debian и основанных на них (Ubuntu, Linux Mint и т. п.), иногда также используется в дистрибутивах, основанных на Mandrake, например Mandriva, ALTLinux и PCLinuxOS. Способна автоматически устанавливать и настраивать программы для UNIX-подобных операционных систем как из предварительно откомпилированных пакетов, так и из исходных кодов.

* apt-get install package_name	установить / обновить пакет

* apt-cdrom install package_name	установить / обновить пакет с cdrom'а

* apt-get update	получить обновлённые списки пакетов

* apt-get upgrade	обновить пакеты, установленные в систему

* apt-get remove package_name	удалить пакет, установленный в систему с сохранением файлов конфигурации

* apt-get purge package_name	удалить пакет, установленный в систему с удалением файлов конфигурации

* apt-get check	проверить целостность зависимостей

* apt-get clean	удалить загруженные архивные файлы пакетов

* apt-get autoclean	удалить старые загруженные архивные файлы пакетов

<h2>Просмотр содержимого файлов</h2>

* cat file1	вывести содержимое файла file1 на стандартное устройсво вывода

* tac file1	вывести содержимое файла file1 на стандартное устройсво вывода в обратном порядке (последняя строка становиться первой и т.д.)

* more file1	постраничный вывод содержимого файла file1 на стандартное устройство вывода

* less file1	постраничный вывод содержимого файла file1 на стандартное устройство вывода, но с возможностью пролистывания в обе стороны (вверх-вниз), поиска по содержимому и т.п.

* head -2 file1	вывести первые две строки файла file1 на стандартное устройство вывода. По-умолчанию выводится десять строк

* tail -2 file1	вывести последние две строки файла file1 на стандартное устройство вывода. По-умолчанию выводится десять строк

* tail -f /var/log/messages	выводить содержимое файла /var/log/messages на стандартное устройство вывода по мере появления в нём текста

<h2>Пользователи и группы</h2>

* groupadd group_name	создать новую группу с именем group_name

* groupdel group_name	удалить группу group_name

* groupmod -n new_group_name old_group_name	переименовать группу old_group_name в new_group_name

* useradd -c «Nome Cognome» -g admin -d /home/user1 -s /bin/bash user1	создать пользователя user1, назначить ему в качестве домашнего каталога /home/user1, в качестве shell'а /bin/bash, включить его в группу admin и добавить комментарий Nome Cognome

* useradd user1	создать пользователя user1

* userdel -r user1	удалить пользователя user1 и его домашний каталог

* usermod -c «User FTP» -g system -d /ftp/user1 -s /bin/nologin user1	изменить атрибуты пользователя

* passwd	сменить пароль

* passwd user1	сменить пароль пользователя user1 (только root)

* chage -E 2005-12-31 user1	установить дату окончания действия учётной записи пользователя user1

* pwck	проверить корректность системных файлов учётных записей. Проверяются файлы /etc/passwd и /etc/shadow

* grpck	проверяет корректность системных файлов учётных записей. Проверяется файл/etc/group

* newgrp [-] group_name	изменяет первичную группу текущего пользователя. Если указать «-», ситуация будет идентичной той, в которой пользователь вышил из системы и снова вошёл. Если не указывать группу, первичная группа будет назначена из /etc/passwd

<h2>Выставление/изменение полномочий на файлы</h2>

* chmod (от англ. change mode) — программа для изменения прав доступа к файлам и директориям. Название происходит от программы ОС Unix chmod, которая, собственно, изменяет права доступа к файлам, директориям и символическим ссылкам.

* ls -lh	просмотр полномочий на файлы и директории в текущей директории

* ls /tmp | pr -T5 -W$COLUMNS	вывести содержимое директории /tmp и разделить вывод на пять колонок

* chmod ugo+rwx directory1	добавить полномочия на директорию directory1 ugo(User Group Other)+rwx(Read Write eXecute) - всем полные права. Аналогичное можно сделать таким образом chmod 777 directory1

* chmod go-rwx directory1	отобрать у группы и всех остальных все полномочия на директорию directory1

* chown user1 file1	назначить владельцем файла file1 пользователя user1

* chown -R user1 directory1	назначить рекурсивно владельцем директории directory1 пользователя user1

* chgrp group1 file1	сменить группу-владельца файла file1 на group1

* chown user1:group1 file1	сменить владельца и группу владельца файла file1

* find / -perm -u+s	найти, начиная от корня, все файлы с выставленным SUID

<h2>Команды Secure Shell (ssh)</h2>

SSH (англ. Secure Shell — «безопасная оболочка») — сетевой протокол прикладного уровня, позволяющий производить удалённое управление операционной системой и туннелирование TCP-соединений (например, для передачи файлов). Схож по функциональности с протоколами Telnet и rlogin, но, в отличие от них, шифрует весь трафик, включая и передаваемые пароли. SSH допускает выбор различных алгоритмов шифрования. SSH-клиенты и SSH-серверы доступны для большинства сетевых операционных систем.

SSH позволяет безопасно передавать в незащищённой среде практически любой другой сетевой протокол. Таким образом, можно не только удалённо работать на компьютере через командную оболочку, но и передавать по шифрованному каналу звуковой поток или видео (например, с веб-камеры)[2]. Также SSH может использовать сжатие передаваемых данных для последующего их шифрования, что удобно, например, для удалённого запуска клиентов X Window System.

Большинство хостинг-провайдеров за определённую плату предоставляют клиентам доступ к их домашнему каталогу по SSH. Это может быть удобно как для работы в командной строке, так и для удалённого запуска программ (в том числе графических приложений).

* ssh user@host	подключится к host как user

* ssh -p port user@host	подключится к host на порт port как user

* ssh-copy-id user@host	добавить ваш ключ на host для user чтобы включить логин без пароля и по ключам
